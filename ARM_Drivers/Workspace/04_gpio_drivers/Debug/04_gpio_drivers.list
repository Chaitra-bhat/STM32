
04_gpio_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000091c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ac4  08000acc  00010acc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ac4  08000ac4  00010acc  2**0
                  CONTENTS
  4 .ARM          00000000  08000ac4  08000ac4  00010acc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ac4  08000acc  00010acc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ac4  08000ac4  00010ac4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ac8  08000ac8  00010ac8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010acc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000acc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000acc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010acc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001b7d  00000000  00000000  00010afc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000460  00000000  00000000  00012679  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00012ae0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00012ba8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000023a6  00000000  00000000  00012c48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011f1  00000000  00000000  00014fee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000992b  00000000  00000000  000161df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001fb0a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001fb60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000aac 	.word	0x08000aac

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000aac 	.word	0x08000aac

080001e8 <delay>:
#include <gpio.h>
#include <string.h>

//void EXTI0_IRQHandler(void);

void delay(int n){
 80001e8:	b480      	push	{r7}
 80001ea:	b085      	sub	sp, #20
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
	for(int i=0; i<n;i++);
 80001f0:	2300      	movs	r3, #0
 80001f2:	60fb      	str	r3, [r7, #12]
 80001f4:	e002      	b.n	80001fc <delay+0x14>
 80001f6:	68fb      	ldr	r3, [r7, #12]
 80001f8:	3301      	adds	r3, #1
 80001fa:	60fb      	str	r3, [r7, #12]
 80001fc:	68fa      	ldr	r2, [r7, #12]
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	429a      	cmp	r2, r3
 8000202:	dbf8      	blt.n	80001f6 <delay+0xe>
}
 8000204:	bf00      	nop
 8000206:	bf00      	nop
 8000208:	3714      	adds	r7, #20
 800020a:	46bd      	mov	sp, r7
 800020c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000210:	4770      	bx	lr
	...

08000214 <main>:

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
  GPIO_Handle_t GPIOLed, GPIOButton;
  memset(&GPIOLed,0,sizeof(GPIOLed));
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	220c      	movs	r2, #12
 8000220:	2100      	movs	r1, #0
 8000222:	4618      	mov	r0, r3
 8000224:	f000 fc3a 	bl	8000a9c <memset>
  memset(&GPIOButton,0,sizeof(GPIOButton));
 8000228:	463b      	mov	r3, r7
 800022a:	220c      	movs	r2, #12
 800022c:	2100      	movs	r1, #0
 800022e:	4618      	mov	r0, r3
 8000230:	f000 fc34 	bl	8000a9c <memset>

  GPIOLed.pGPIOx = GPIOD;
 8000234:	4b1b      	ldr	r3, [pc, #108]	; (80002a4 <main+0x90>)
 8000236:	60fb      	str	r3, [r7, #12]
  GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINUMBER_12;
 8000238:	230c      	movs	r3, #12
 800023a:	743b      	strb	r3, [r7, #16]
  GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 800023c:	2301      	movs	r3, #1
 800023e:	747b      	strb	r3, [r7, #17]
  GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 8000240:	2301      	movs	r3, #1
 8000242:	74bb      	strb	r3, [r7, #18]
  GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PUSHPULL;
 8000244:	2300      	movs	r3, #0
 8000246:	753b      	strb	r3, [r7, #20]
  GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPD_NO;
 8000248:	2300      	movs	r3, #0
 800024a:	74fb      	strb	r3, [r7, #19]
  GPIO_PeriClockControl(GPIOD, ENABLE);
 800024c:	2101      	movs	r1, #1
 800024e:	4815      	ldr	r0, [pc, #84]	; (80002a4 <main+0x90>)
 8000250:	f000 f83e 	bl	80002d0 <GPIO_PeriClockControl>
  GPIO_Init(&GPIOLed);
 8000254:	f107 030c 	add.w	r3, r7, #12
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f921 	bl	80004a0 <GPIO_Init>

  GPIOButton.pGPIOx = GPIOA;
 800025e:	4b12      	ldr	r3, [pc, #72]	; (80002a8 <main+0x94>)
 8000260:	603b      	str	r3, [r7, #0]
  GPIOButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINUMBER_5;
 8000262:	2305      	movs	r3, #5
 8000264:	713b      	strb	r3, [r7, #4]
  GPIOButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000266:	2304      	movs	r3, #4
 8000268:	717b      	strb	r3, [r7, #5]
  GPIOButton.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PUSHPULL;
 800026a:	2300      	movs	r3, #0
 800026c:	723b      	strb	r3, [r7, #8]
  GPIOButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPD_PU;
 800026e:	2301      	movs	r3, #1
 8000270:	71fb      	strb	r3, [r7, #7]
  GPIOButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_FAST;
 8000272:	2302      	movs	r3, #2
 8000274:	71bb      	strb	r3, [r7, #6]


  GPIO_PeriClockControl(GPIOA, ENABLE);
 8000276:	2101      	movs	r1, #1
 8000278:	480b      	ldr	r0, [pc, #44]	; (80002a8 <main+0x94>)
 800027a:	f000 f829 	bl	80002d0 <GPIO_PeriClockControl>

  GPIO_Init(&GPIOButton);
 800027e:	463b      	mov	r3, r7
 8000280:	4618      	mov	r0, r3
 8000282:	f000 f90d 	bl	80004a0 <GPIO_Init>

  GPIO_WriteToOutputPin(GPIOD, GPIO_PINUMBER_12, RESET);
 8000286:	2200      	movs	r2, #0
 8000288:	210c      	movs	r1, #12
 800028a:	4806      	ldr	r0, [pc, #24]	; (80002a4 <main+0x90>)
 800028c:	f000 faac 	bl	80007e8 <GPIO_WriteToOutputPin>
  //IRQ CONFIGURATIONS
  GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_PRIO_15);
 8000290:	210f      	movs	r1, #15
 8000292:	2017      	movs	r0, #23
 8000294:	f000 fb68 	bl	8000968 <GPIO_IRQPriorityConfig>
  GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5, ENABLE);
 8000298:	2101      	movs	r1, #1
 800029a:	2017      	movs	r0, #23
 800029c:	f000 fade 	bl	800085c <GPIO_IRQInterruptConfig>

  	  while(1);
 80002a0:	e7fe      	b.n	80002a0 <main+0x8c>
 80002a2:	bf00      	nop
 80002a4:	40020c00 	.word	0x40020c00
 80002a8:	40020000 	.word	0x40020000

080002ac <EXTI9_5_IRQHandler>:
}

//Implement the ISR
void EXTI9_5_IRQHandler(void){
 80002ac:	b580      	push	{r7, lr}
 80002ae:	af00      	add	r7, sp, #0
	  delay(200000);
 80002b0:	4805      	ldr	r0, [pc, #20]	; (80002c8 <EXTI9_5_IRQHandler+0x1c>)
 80002b2:	f7ff ff99 	bl	80001e8 <delay>
	  GPIO_IRQHandling(GPIO_PINUMBER_5);
 80002b6:	2005      	movs	r0, #5
 80002b8:	f000 fb82 	bl	80009c0 <GPIO_IRQHandling>
	  GPIO_ToggleOutputPin(GPIOD, GPIO_PINUMBER_12);
 80002bc:	210c      	movs	r1, #12
 80002be:	4803      	ldr	r0, [pc, #12]	; (80002cc <EXTI9_5_IRQHandler+0x20>)
 80002c0:	f000 fab7 	bl	8000832 <GPIO_ToggleOutputPin>
}
 80002c4:	bf00      	nop
 80002c6:	bd80      	pop	{r7, pc}
 80002c8:	00030d40 	.word	0x00030d40
 80002cc:	40020c00 	.word	0x40020c00

080002d0 <GPIO_PeriClockControl>:
 *      Author: Navjeevan
 */
#include <gpio.h>

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	460b      	mov	r3, r1
 80002da:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002dc:	78fb      	ldrb	r3, [r7, #3]
 80002de:	2b01      	cmp	r3, #1
 80002e0:	d162      	bne.n	80003a8 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a64      	ldr	r2, [pc, #400]	; (8000478 <GPIO_PeriClockControl+0x1a8>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002ea:	4b64      	ldr	r3, [pc, #400]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ee:	4a63      	ldr	r2, [pc, #396]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80002f0:	f043 0301 	orr.w	r3, r3, #1
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
			{
				GPIOI_PCLK_DI();
			}
	}

}
 80002f6:	e0b9      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a61      	ldr	r2, [pc, #388]	; (8000480 <GPIO_PeriClockControl+0x1b0>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000300:	4b5e      	ldr	r3, [pc, #376]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a5d      	ldr	r2, [pc, #372]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000306:	f043 0302 	orr.w	r3, r3, #2
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030c:	e0ae      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a5c      	ldr	r2, [pc, #368]	; (8000484 <GPIO_PeriClockControl+0x1b4>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000316:	4b59      	ldr	r3, [pc, #356]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a58      	ldr	r2, [pc, #352]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800031c:	f043 0304 	orr.w	r3, r3, #4
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000322:	e0a3      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a58      	ldr	r2, [pc, #352]	; (8000488 <GPIO_PeriClockControl+0x1b8>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800032c:	4b53      	ldr	r3, [pc, #332]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a52      	ldr	r2, [pc, #328]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000332:	f043 0308 	orr.w	r3, r3, #8
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e098      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a53      	ldr	r2, [pc, #332]	; (800048c <GPIO_PeriClockControl+0x1bc>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000342:	4b4e      	ldr	r3, [pc, #312]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a4d      	ldr	r2, [pc, #308]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000348:	f043 0310 	orr.w	r3, r3, #16
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	e08d      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a4f      	ldr	r2, [pc, #316]	; (8000490 <GPIO_PeriClockControl+0x1c0>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000358:	4b48      	ldr	r3, [pc, #288]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a47      	ldr	r2, [pc, #284]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800035e:	f043 0320 	orr.w	r3, r3, #32
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	e082      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a4a      	ldr	r2, [pc, #296]	; (8000494 <GPIO_PeriClockControl+0x1c4>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800036e:	4b43      	ldr	r3, [pc, #268]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000372:	4a42      	ldr	r2, [pc, #264]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000374:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000378:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037a:	e077      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a46      	ldr	r2, [pc, #280]	; (8000498 <GPIO_PeriClockControl+0x1c8>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d106      	bne.n	8000392 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000384:	4b3d      	ldr	r3, [pc, #244]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000388:	4a3c      	ldr	r2, [pc, #240]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800038a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800038e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000390:	e06c      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a41      	ldr	r2, [pc, #260]	; (800049c <GPIO_PeriClockControl+0x1cc>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d168      	bne.n	800046c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800039a:	4b38      	ldr	r3, [pc, #224]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039e:	4a37      	ldr	r2, [pc, #220]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a6:	e061      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a33      	ldr	r2, [pc, #204]	; (8000478 <GPIO_PeriClockControl+0x1a8>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d106      	bne.n	80003be <GPIO_PeriClockControl+0xee>
				GPIOA_PCLK_DI();
 80003b0:	4b32      	ldr	r3, [pc, #200]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003b2:	691b      	ldr	r3, [r3, #16]
 80003b4:	4a31      	ldr	r2, [pc, #196]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003b6:	f023 0301 	bic.w	r3, r3, #1
 80003ba:	6113      	str	r3, [r2, #16]
}
 80003bc:	e056      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a2f      	ldr	r2, [pc, #188]	; (8000480 <GPIO_PeriClockControl+0x1b0>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d106      	bne.n	80003d4 <GPIO_PeriClockControl+0x104>
				GPIOB_PCLK_DI();
 80003c6:	4b2d      	ldr	r3, [pc, #180]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003c8:	691b      	ldr	r3, [r3, #16]
 80003ca:	4a2c      	ldr	r2, [pc, #176]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003cc:	f023 0302 	bic.w	r3, r3, #2
 80003d0:	6113      	str	r3, [r2, #16]
}
 80003d2:	e04b      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4a2b      	ldr	r2, [pc, #172]	; (8000484 <GPIO_PeriClockControl+0x1b4>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d106      	bne.n	80003ea <GPIO_PeriClockControl+0x11a>
				GPIOC_PCLK_DI();
 80003dc:	4b27      	ldr	r3, [pc, #156]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003de:	691b      	ldr	r3, [r3, #16]
 80003e0:	4a26      	ldr	r2, [pc, #152]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003e2:	f023 0304 	bic.w	r3, r3, #4
 80003e6:	6113      	str	r3, [r2, #16]
}
 80003e8:	e040      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4a26      	ldr	r2, [pc, #152]	; (8000488 <GPIO_PeriClockControl+0x1b8>)
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d106      	bne.n	8000400 <GPIO_PeriClockControl+0x130>
				GPIOD_PCLK_DI();
 80003f2:	4b22      	ldr	r3, [pc, #136]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003f4:	691b      	ldr	r3, [r3, #16]
 80003f6:	4a21      	ldr	r2, [pc, #132]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 80003f8:	f023 0308 	bic.w	r3, r3, #8
 80003fc:	6113      	str	r3, [r2, #16]
}
 80003fe:	e035      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	4a22      	ldr	r2, [pc, #136]	; (800048c <GPIO_PeriClockControl+0x1bc>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d106      	bne.n	8000416 <GPIO_PeriClockControl+0x146>
				GPIOE_PCLK_DI();
 8000408:	4b1c      	ldr	r3, [pc, #112]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800040a:	691b      	ldr	r3, [r3, #16]
 800040c:	4a1b      	ldr	r2, [pc, #108]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800040e:	f023 0310 	bic.w	r3, r3, #16
 8000412:	6113      	str	r3, [r2, #16]
}
 8000414:	e02a      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4a1d      	ldr	r2, [pc, #116]	; (8000490 <GPIO_PeriClockControl+0x1c0>)
 800041a:	4293      	cmp	r3, r2
 800041c:	d106      	bne.n	800042c <GPIO_PeriClockControl+0x15c>
				GPIOF_PCLK_DI();
 800041e:	4b17      	ldr	r3, [pc, #92]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000420:	691b      	ldr	r3, [r3, #16]
 8000422:	4a16      	ldr	r2, [pc, #88]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000424:	f023 0320 	bic.w	r3, r3, #32
 8000428:	6113      	str	r3, [r2, #16]
}
 800042a:	e01f      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	4a19      	ldr	r2, [pc, #100]	; (8000494 <GPIO_PeriClockControl+0x1c4>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d106      	bne.n	8000442 <GPIO_PeriClockControl+0x172>
				GPIOG_PCLK_DI();
 8000434:	4b11      	ldr	r3, [pc, #68]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000436:	691b      	ldr	r3, [r3, #16]
 8000438:	4a10      	ldr	r2, [pc, #64]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800043a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800043e:	6113      	str	r3, [r2, #16]
}
 8000440:	e014      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4a14      	ldr	r2, [pc, #80]	; (8000498 <GPIO_PeriClockControl+0x1c8>)
 8000446:	4293      	cmp	r3, r2
 8000448:	d106      	bne.n	8000458 <GPIO_PeriClockControl+0x188>
				GPIOH_PCLK_DI();
 800044a:	4b0c      	ldr	r3, [pc, #48]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 800044c:	691b      	ldr	r3, [r3, #16]
 800044e:	4a0b      	ldr	r2, [pc, #44]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000450:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000454:	6113      	str	r3, [r2, #16]
}
 8000456:	e009      	b.n	800046c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	4a10      	ldr	r2, [pc, #64]	; (800049c <GPIO_PeriClockControl+0x1cc>)
 800045c:	4293      	cmp	r3, r2
 800045e:	d105      	bne.n	800046c <GPIO_PeriClockControl+0x19c>
				GPIOI_PCLK_DI();
 8000460:	4b06      	ldr	r3, [pc, #24]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000462:	691b      	ldr	r3, [r3, #16]
 8000464:	4a05      	ldr	r2, [pc, #20]	; (800047c <GPIO_PeriClockControl+0x1ac>)
 8000466:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800046a:	6113      	str	r3, [r2, #16]
}
 800046c:	bf00      	nop
 800046e:	370c      	adds	r7, #12
 8000470:	46bd      	mov	sp, r7
 8000472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000476:	4770      	bx	lr
 8000478:	40020000 	.word	0x40020000
 800047c:	40023800 	.word	0x40023800
 8000480:	40020400 	.word	0x40020400
 8000484:	40020800 	.word	0x40020800
 8000488:	40020c00 	.word	0x40020c00
 800048c:	40021000 	.word	0x40021000
 8000490:	40021400 	.word	0x40021400
 8000494:	40021800 	.word	0x40021800
 8000498:	40021c00 	.word	0x40021c00
 800049c:	40022000 	.word	0x40022000

080004a0 <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b086      	sub	sp, #24
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80004a8:	2300      	movs	r3, #0
 80004aa:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	2101      	movs	r1, #1
 80004b2:	4618      	mov	r0, r3
 80004b4:	f7ff ff0c 	bl	80002d0 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	795b      	ldrb	r3, [r3, #5]
 80004bc:	2b03      	cmp	r3, #3
 80004be:	d820      	bhi.n	8000502 <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	795b      	ldrb	r3, [r3, #5]
 80004c4:	461a      	mov	r2, r3
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	005b      	lsls	r3, r3, #1
 80004cc:	fa02 f303 	lsl.w	r3, r2, r3
 80004d0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	681a      	ldr	r2, [r3, #0]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791b      	ldrb	r3, [r3, #4]
 80004dc:	005b      	lsls	r3, r3, #1
 80004de:	2103      	movs	r1, #3
 80004e0:	fa01 f303 	lsl.w	r3, r1, r3
 80004e4:	43db      	mvns	r3, r3
 80004e6:	4619      	mov	r1, r3
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	400a      	ands	r2, r1
 80004ee:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	6819      	ldr	r1, [r3, #0]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	697a      	ldr	r2, [r7, #20]
 80004fc:	430a      	orrs	r2, r1
 80004fe:	601a      	str	r2, [r3, #0]
 8000500:	e0d3      	b.n	80006aa <GPIO_Init+0x20a>

	}else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT)
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	795b      	ldrb	r3, [r3, #5]
 8000506:	2b04      	cmp	r3, #4
 8000508:	d117      	bne.n	800053a <GPIO_Init+0x9a>
			{
				//Configure the FTSR
				EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050a:	4b4e      	ldr	r3, [pc, #312]	; (8000644 <GPIO_Init+0x1a4>)
 800050c:	68db      	ldr	r3, [r3, #12]
 800050e:	687a      	ldr	r2, [r7, #4]
 8000510:	7912      	ldrb	r2, [r2, #4]
 8000512:	4611      	mov	r1, r2
 8000514:	2201      	movs	r2, #1
 8000516:	408a      	lsls	r2, r1
 8000518:	4611      	mov	r1, r2
 800051a:	4a4a      	ldr	r2, [pc, #296]	; (8000644 <GPIO_Init+0x1a4>)
 800051c:	430b      	orrs	r3, r1
 800051e:	60d3      	str	r3, [r2, #12]
				//Clear corresponding RTSR bit
				EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000520:	4b48      	ldr	r3, [pc, #288]	; (8000644 <GPIO_Init+0x1a4>)
 8000522:	689b      	ldr	r3, [r3, #8]
 8000524:	687a      	ldr	r2, [r7, #4]
 8000526:	7912      	ldrb	r2, [r2, #4]
 8000528:	4611      	mov	r1, r2
 800052a:	2201      	movs	r2, #1
 800052c:	408a      	lsls	r2, r1
 800052e:	43d2      	mvns	r2, r2
 8000530:	4611      	mov	r1, r2
 8000532:	4a44      	ldr	r2, [pc, #272]	; (8000644 <GPIO_Init+0x1a4>)
 8000534:	400b      	ands	r3, r1
 8000536:	6093      	str	r3, [r2, #8]
 8000538:	e035      	b.n	80005a6 <GPIO_Init+0x106>
			}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	795b      	ldrb	r3, [r3, #5]
 800053e:	2b05      	cmp	r3, #5
 8000540:	d117      	bne.n	8000572 <GPIO_Init+0xd2>
			{
				//Configure the RTSR
					EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000542:	4b40      	ldr	r3, [pc, #256]	; (8000644 <GPIO_Init+0x1a4>)
 8000544:	689b      	ldr	r3, [r3, #8]
 8000546:	687a      	ldr	r2, [r7, #4]
 8000548:	7912      	ldrb	r2, [r2, #4]
 800054a:	4611      	mov	r1, r2
 800054c:	2201      	movs	r2, #1
 800054e:	408a      	lsls	r2, r1
 8000550:	4611      	mov	r1, r2
 8000552:	4a3c      	ldr	r2, [pc, #240]	; (8000644 <GPIO_Init+0x1a4>)
 8000554:	430b      	orrs	r3, r1
 8000556:	6093      	str	r3, [r2, #8]
					//Clear corresponding FTSR bit
					EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000558:	4b3a      	ldr	r3, [pc, #232]	; (8000644 <GPIO_Init+0x1a4>)
 800055a:	68db      	ldr	r3, [r3, #12]
 800055c:	687a      	ldr	r2, [r7, #4]
 800055e:	7912      	ldrb	r2, [r2, #4]
 8000560:	4611      	mov	r1, r2
 8000562:	2201      	movs	r2, #1
 8000564:	408a      	lsls	r2, r1
 8000566:	43d2      	mvns	r2, r2
 8000568:	4611      	mov	r1, r2
 800056a:	4a36      	ldr	r2, [pc, #216]	; (8000644 <GPIO_Init+0x1a4>)
 800056c:	400b      	ands	r3, r1
 800056e:	60d3      	str	r3, [r2, #12]
 8000570:	e019      	b.n	80005a6 <GPIO_Init+0x106>
			}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	795b      	ldrb	r3, [r3, #5]
 8000576:	2b06      	cmp	r3, #6
 8000578:	d115      	bne.n	80005a6 <GPIO_Init+0x106>
			{
				//Configure both RTSR and FTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	4b32      	ldr	r3, [pc, #200]	; (8000644 <GPIO_Init+0x1a4>)
 800057c:	68db      	ldr	r3, [r3, #12]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	7912      	ldrb	r2, [r2, #4]
 8000582:	4611      	mov	r1, r2
 8000584:	2201      	movs	r2, #1
 8000586:	408a      	lsls	r2, r1
 8000588:	4611      	mov	r1, r2
 800058a:	4a2e      	ldr	r2, [pc, #184]	; (8000644 <GPIO_Init+0x1a4>)
 800058c:	430b      	orrs	r3, r1
 800058e:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000590:	4b2c      	ldr	r3, [pc, #176]	; (8000644 <GPIO_Init+0x1a4>)
 8000592:	689b      	ldr	r3, [r3, #8]
 8000594:	687a      	ldr	r2, [r7, #4]
 8000596:	7912      	ldrb	r2, [r2, #4]
 8000598:	4611      	mov	r1, r2
 800059a:	2201      	movs	r2, #1
 800059c:	408a      	lsls	r2, r1
 800059e:	4611      	mov	r1, r2
 80005a0:	4a28      	ldr	r2, [pc, #160]	; (8000644 <GPIO_Init+0x1a4>)
 80005a2:	430b      	orrs	r3, r1
 80005a4:	6093      	str	r3, [r2, #8]

			}
			//Configure the port selection in SYSCFG register
			uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4);
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	791b      	ldrb	r3, [r3, #4]
 80005aa:	089b      	lsrs	r3, r3, #2
 80005ac:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4);
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	f003 0303 	and.w	r3, r3, #3
 80005b6:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a22      	ldr	r2, [pc, #136]	; (8000648 <GPIO_Init+0x1a8>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d056      	beq.n	8000670 <GPIO_Init+0x1d0>
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a21      	ldr	r2, [pc, #132]	; (800064c <GPIO_Init+0x1ac>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d039      	beq.n	8000640 <GPIO_Init+0x1a0>
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a1f      	ldr	r2, [pc, #124]	; (8000650 <GPIO_Init+0x1b0>)
 80005d2:	4293      	cmp	r3, r2
 80005d4:	d032      	beq.n	800063c <GPIO_Init+0x19c>
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	4a1e      	ldr	r2, [pc, #120]	; (8000654 <GPIO_Init+0x1b4>)
 80005dc:	4293      	cmp	r3, r2
 80005de:	d02b      	beq.n	8000638 <GPIO_Init+0x198>
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a1c      	ldr	r2, [pc, #112]	; (8000658 <GPIO_Init+0x1b8>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d024      	beq.n	8000634 <GPIO_Init+0x194>
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a1b      	ldr	r2, [pc, #108]	; (800065c <GPIO_Init+0x1bc>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d01d      	beq.n	8000630 <GPIO_Init+0x190>
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a19      	ldr	r2, [pc, #100]	; (8000660 <GPIO_Init+0x1c0>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d016      	beq.n	800062c <GPIO_Init+0x18c>
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	4a18      	ldr	r2, [pc, #96]	; (8000664 <GPIO_Init+0x1c4>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d00f      	beq.n	8000628 <GPIO_Init+0x188>
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	4a16      	ldr	r2, [pc, #88]	; (8000668 <GPIO_Init+0x1c8>)
 800060e:	4293      	cmp	r3, r2
 8000610:	d008      	beq.n	8000624 <GPIO_Init+0x184>
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	4a15      	ldr	r2, [pc, #84]	; (800066c <GPIO_Init+0x1cc>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d101      	bne.n	8000620 <GPIO_Init+0x180>
 800061c:	2309      	movs	r3, #9
 800061e:	e028      	b.n	8000672 <GPIO_Init+0x1d2>
 8000620:	2300      	movs	r3, #0
 8000622:	e026      	b.n	8000672 <GPIO_Init+0x1d2>
 8000624:	2308      	movs	r3, #8
 8000626:	e024      	b.n	8000672 <GPIO_Init+0x1d2>
 8000628:	2307      	movs	r3, #7
 800062a:	e022      	b.n	8000672 <GPIO_Init+0x1d2>
 800062c:	2306      	movs	r3, #6
 800062e:	e020      	b.n	8000672 <GPIO_Init+0x1d2>
 8000630:	2305      	movs	r3, #5
 8000632:	e01e      	b.n	8000672 <GPIO_Init+0x1d2>
 8000634:	2304      	movs	r3, #4
 8000636:	e01c      	b.n	8000672 <GPIO_Init+0x1d2>
 8000638:	2303      	movs	r3, #3
 800063a:	e01a      	b.n	8000672 <GPIO_Init+0x1d2>
 800063c:	2302      	movs	r3, #2
 800063e:	e018      	b.n	8000672 <GPIO_Init+0x1d2>
 8000640:	2301      	movs	r3, #1
 8000642:	e016      	b.n	8000672 <GPIO_Init+0x1d2>
 8000644:	40013c00 	.word	0x40013c00
 8000648:	40020000 	.word	0x40020000
 800064c:	40020400 	.word	0x40020400
 8000650:	40020800 	.word	0x40020800
 8000654:	40020c00 	.word	0x40020c00
 8000658:	40021000 	.word	0x40021000
 800065c:	40021400 	.word	0x40021400
 8000660:	40021800 	.word	0x40021800
 8000664:	40021c00 	.word	0x40021c00
 8000668:	40022000 	.word	0x40022000
 800066c:	40022400 	.word	0x40022400
 8000670:	2300      	movs	r3, #0
 8000672:	747b      	strb	r3, [r7, #17]
			SYSCFG_CLK_EN();
 8000674:	4b59      	ldr	r3, [pc, #356]	; (80007dc <GPIO_Init+0x33c>)
 8000676:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000678:	4a58      	ldr	r2, [pc, #352]	; (80007dc <GPIO_Init+0x33c>)
 800067a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800067e:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1] = (portcode << (temp2*4));
 8000680:	7c7a      	ldrb	r2, [r7, #17]
 8000682:	7cbb      	ldrb	r3, [r7, #18]
 8000684:	009b      	lsls	r3, r3, #2
 8000686:	fa02 f103 	lsl.w	r1, r2, r3
 800068a:	4a55      	ldr	r2, [pc, #340]	; (80007e0 <GPIO_Init+0x340>)
 800068c:	7cfb      	ldrb	r3, [r7, #19]
 800068e:	3302      	adds	r3, #2
 8000690:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

				//enable the exti interrupt delivery using IMR
			EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000694:	4b53      	ldr	r3, [pc, #332]	; (80007e4 <GPIO_Init+0x344>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	687a      	ldr	r2, [r7, #4]
 800069a:	7912      	ldrb	r2, [r2, #4]
 800069c:	4611      	mov	r1, r2
 800069e:	2201      	movs	r2, #1
 80006a0:	408a      	lsls	r2, r1
 80006a2:	4611      	mov	r1, r2
 80006a4:	4a4f      	ldr	r2, [pc, #316]	; (80007e4 <GPIO_Init+0x344>)
 80006a6:	430b      	orrs	r3, r1
 80006a8:	6013      	str	r3, [r2, #0]

	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	799b      	ldrb	r3, [r3, #6]
 80006ae:	461a      	mov	r2, r3
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	791b      	ldrb	r3, [r3, #4]
 80006b4:	005b      	lsls	r3, r3, #1
 80006b6:	fa02 f303 	lsl.w	r3, r2, r3
 80006ba:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	689a      	ldr	r2, [r3, #8]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	791b      	ldrb	r3, [r3, #4]
 80006c6:	005b      	lsls	r3, r3, #1
 80006c8:	2103      	movs	r1, #3
 80006ca:	fa01 f303 	lsl.w	r3, r1, r3
 80006ce:	43db      	mvns	r3, r3
 80006d0:	4619      	mov	r1, r3
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	400a      	ands	r2, r1
 80006d8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	6899      	ldr	r1, [r3, #8]
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	697a      	ldr	r2, [r7, #20]
 80006e6:	430a      	orrs	r2, r1
 80006e8:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	79db      	ldrb	r3, [r3, #7]
 80006ee:	461a      	mov	r2, r3
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	791b      	ldrb	r3, [r3, #4]
 80006f4:	005b      	lsls	r3, r3, #1
 80006f6:	fa02 f303 	lsl.w	r3, r2, r3
 80006fa:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	68da      	ldr	r2, [r3, #12]
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	791b      	ldrb	r3, [r3, #4]
 8000706:	005b      	lsls	r3, r3, #1
 8000708:	2103      	movs	r1, #3
 800070a:	fa01 f303 	lsl.w	r3, r1, r3
 800070e:	43db      	mvns	r3, r3
 8000710:	4619      	mov	r1, r3
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	400a      	ands	r2, r1
 8000718:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	68d9      	ldr	r1, [r3, #12]
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	697a      	ldr	r2, [r7, #20]
 8000726:	430a      	orrs	r2, r1
 8000728:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	7a1b      	ldrb	r3, [r3, #8]
 800072e:	461a      	mov	r2, r3
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	791b      	ldrb	r3, [r3, #4]
 8000734:	fa02 f303 	lsl.w	r3, r2, r3
 8000738:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	685a      	ldr	r2, [r3, #4]
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	791b      	ldrb	r3, [r3, #4]
 8000744:	4619      	mov	r1, r3
 8000746:	2301      	movs	r3, #1
 8000748:	408b      	lsls	r3, r1
 800074a:	43db      	mvns	r3, r3
 800074c:	4619      	mov	r1, r3
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	400a      	ands	r2, r1
 8000754:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	681b      	ldr	r3, [r3, #0]
 800075a:	6859      	ldr	r1, [r3, #4]
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	697a      	ldr	r2, [r7, #20]
 8000762:	430a      	orrs	r2, r1
 8000764:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTERNATEFUNC)
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	795b      	ldrb	r3, [r3, #5]
 800076a:	2b02      	cmp	r3, #2
 800076c:	d131      	bne.n	80007d2 <GPIO_Init+0x332>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	791b      	ldrb	r3, [r3, #4]
 8000772:	08db      	lsrs	r3, r3, #3
 8000774:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	791b      	ldrb	r3, [r3, #4]
 800077a:	f003 0307 	and.w	r3, r3, #7
 800077e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	7c3a      	ldrb	r2, [r7, #16]
 8000786:	3208      	adds	r2, #8
 8000788:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800078c:	7bfb      	ldrb	r3, [r7, #15]
 800078e:	009b      	lsls	r3, r3, #2
 8000790:	220f      	movs	r2, #15
 8000792:	fa02 f303 	lsl.w	r3, r2, r3
 8000796:	43db      	mvns	r3, r3
 8000798:	4618      	mov	r0, r3
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	7c3a      	ldrb	r2, [r7, #16]
 80007a0:	4001      	ands	r1, r0
 80007a2:	3208      	adds	r2, #8
 80007a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	7c3a      	ldrb	r2, [r7, #16]
 80007ae:	3208      	adds	r2, #8
 80007b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	7a5b      	ldrb	r3, [r3, #9]
 80007b8:	461a      	mov	r2, r3
 80007ba:	7bfb      	ldrb	r3, [r7, #15]
 80007bc:	009b      	lsls	r3, r3, #2
 80007be:	fa02 f303 	lsl.w	r3, r2, r3
 80007c2:	4618      	mov	r0, r3
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	7c3a      	ldrb	r2, [r7, #16]
 80007ca:	4301      	orrs	r1, r0
 80007cc:	3208      	adds	r2, #8
 80007ce:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80007d2:	bf00      	nop
 80007d4:	3718      	adds	r7, #24
 80007d6:	46bd      	mov	sp, r7
 80007d8:	bd80      	pop	{r7, pc}
 80007da:	bf00      	nop
 80007dc:	40023800 	.word	0x40023800
 80007e0:	40013800 	.word	0x40013800
 80007e4:	40013c00 	.word	0x40013c00

080007e8 <GPIO_WriteToOutputPin>:
	return value;
}


void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80007e8:	b480      	push	{r7}
 80007ea:	b083      	sub	sp, #12
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	6078      	str	r0, [r7, #4]
 80007f0:	460b      	mov	r3, r1
 80007f2:	70fb      	strb	r3, [r7, #3]
 80007f4:	4613      	mov	r3, r2
 80007f6:	70bb      	strb	r3, [r7, #2]

	if(Value == ENABLE)
 80007f8:	78bb      	ldrb	r3, [r7, #2]
 80007fa:	2b01      	cmp	r3, #1
 80007fc:	d109      	bne.n	8000812 <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR |= ( 1 << PinNumber);
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	695b      	ldr	r3, [r3, #20]
 8000802:	78fa      	ldrb	r2, [r7, #3]
 8000804:	2101      	movs	r1, #1
 8000806:	fa01 f202 	lsl.w	r2, r1, r2
 800080a:	431a      	orrs	r2, r3
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	615a      	str	r2, [r3, #20]
	}else
	{
		//write 0
		pGPIOx->ODR &= ~( 1 << PinNumber);
	}
}
 8000810:	e009      	b.n	8000826 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber);
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	695b      	ldr	r3, [r3, #20]
 8000816:	78fa      	ldrb	r2, [r7, #3]
 8000818:	2101      	movs	r1, #1
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	43d2      	mvns	r2, r2
 8000820:	401a      	ands	r2, r3
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	615a      	str	r2, [r3, #20]
}
 8000826:	bf00      	nop
 8000828:	370c      	adds	r7, #12
 800082a:	46bd      	mov	sp, r7
 800082c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000830:	4770      	bx	lr

08000832 <GPIO_ToggleOutputPin>:
	pGPIOx->ODR  = Value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000832:	b480      	push	{r7}
 8000834:	b083      	sub	sp, #12
 8000836:	af00      	add	r7, sp, #0
 8000838:	6078      	str	r0, [r7, #4]
 800083a:	460b      	mov	r3, r1
 800083c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	695b      	ldr	r3, [r3, #20]
 8000842:	78fa      	ldrb	r2, [r7, #3]
 8000844:	2101      	movs	r1, #1
 8000846:	fa01 f202 	lsl.w	r2, r1, r2
 800084a:	405a      	eors	r2, r3
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	615a      	str	r2, [r3, #20]
}
 8000850:	bf00      	nop
 8000852:	370c      	adds	r7, #12
 8000854:	46bd      	mov	sp, r7
 8000856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800085a:	4770      	bx	lr

0800085c <GPIO_IRQInterruptConfig>:

void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 800085c:	b480      	push	{r7}
 800085e:	b083      	sub	sp, #12
 8000860:	af00      	add	r7, sp, #0
 8000862:	4603      	mov	r3, r0
 8000864:	460a      	mov	r2, r1
 8000866:	71fb      	strb	r3, [r7, #7]
 8000868:	4613      	mov	r3, r2
 800086a:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 800086c:	79bb      	ldrb	r3, [r7, #6]
 800086e:	2b01      	cmp	r3, #1
 8000870:	d133      	bne.n	80008da <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber<= 31)
 8000872:	79fb      	ldrb	r3, [r7, #7]
 8000874:	2b1f      	cmp	r3, #31
 8000876:	d80a      	bhi.n	800088e <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0
			*NVIC_ISER0 |= (1<<IRQNumber);
 8000878:	4b35      	ldr	r3, [pc, #212]	; (8000950 <GPIO_IRQInterruptConfig+0xf4>)
 800087a:	681b      	ldr	r3, [r3, #0]
 800087c:	79fa      	ldrb	r2, [r7, #7]
 800087e:	2101      	movs	r1, #1
 8000880:	fa01 f202 	lsl.w	r2, r1, r2
 8000884:	4611      	mov	r1, r2
 8000886:	4a32      	ldr	r2, [pc, #200]	; (8000950 <GPIO_IRQInterruptConfig+0xf4>)
 8000888:	430b      	orrs	r3, r1
 800088a:	6013      	str	r3, [r2, #0]
		}

	}


}
 800088c:	e059      	b.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >31 && IRQNumber <64)
 800088e:	79fb      	ldrb	r3, [r7, #7]
 8000890:	2b1f      	cmp	r3, #31
 8000892:	d90f      	bls.n	80008b4 <GPIO_IRQInterruptConfig+0x58>
 8000894:	79fb      	ldrb	r3, [r7, #7]
 8000896:	2b3f      	cmp	r3, #63	; 0x3f
 8000898:	d80c      	bhi.n	80008b4 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1<<(IRQNumber%32));
 800089a:	4b2e      	ldr	r3, [pc, #184]	; (8000954 <GPIO_IRQInterruptConfig+0xf8>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	79fa      	ldrb	r2, [r7, #7]
 80008a0:	f002 021f 	and.w	r2, r2, #31
 80008a4:	2101      	movs	r1, #1
 80008a6:	fa01 f202 	lsl.w	r2, r1, r2
 80008aa:	4611      	mov	r1, r2
 80008ac:	4a29      	ldr	r2, [pc, #164]	; (8000954 <GPIO_IRQInterruptConfig+0xf8>)
 80008ae:	430b      	orrs	r3, r1
 80008b0:	6013      	str	r3, [r2, #0]
 80008b2:	e046      	b.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber>= 64 && IRQNumber < 96)
 80008b4:	79fb      	ldrb	r3, [r7, #7]
 80008b6:	2b3f      	cmp	r3, #63	; 0x3f
 80008b8:	d943      	bls.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
 80008ba:	79fb      	ldrb	r3, [r7, #7]
 80008bc:	2b5f      	cmp	r3, #95	; 0x5f
 80008be:	d840      	bhi.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1<<(IRQNumber%64));
 80008c0:	4b25      	ldr	r3, [pc, #148]	; (8000958 <GPIO_IRQInterruptConfig+0xfc>)
 80008c2:	681b      	ldr	r3, [r3, #0]
 80008c4:	79fa      	ldrb	r2, [r7, #7]
 80008c6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ca:	2101      	movs	r1, #1
 80008cc:	fa01 f202 	lsl.w	r2, r1, r2
 80008d0:	4611      	mov	r1, r2
 80008d2:	4a21      	ldr	r2, [pc, #132]	; (8000958 <GPIO_IRQInterruptConfig+0xfc>)
 80008d4:	430b      	orrs	r3, r1
 80008d6:	6013      	str	r3, [r2, #0]
}
 80008d8:	e033      	b.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber<= 31)
 80008da:	79fb      	ldrb	r3, [r7, #7]
 80008dc:	2b1f      	cmp	r3, #31
 80008de:	d80a      	bhi.n	80008f6 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1<<IRQNumber);
 80008e0:	4b1e      	ldr	r3, [pc, #120]	; (800095c <GPIO_IRQInterruptConfig+0x100>)
 80008e2:	681b      	ldr	r3, [r3, #0]
 80008e4:	79fa      	ldrb	r2, [r7, #7]
 80008e6:	2101      	movs	r1, #1
 80008e8:	fa01 f202 	lsl.w	r2, r1, r2
 80008ec:	4611      	mov	r1, r2
 80008ee:	4a1b      	ldr	r2, [pc, #108]	; (800095c <GPIO_IRQInterruptConfig+0x100>)
 80008f0:	430b      	orrs	r3, r1
 80008f2:	6013      	str	r3, [r2, #0]
}
 80008f4:	e025      	b.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >31 && IRQNumber <64)
 80008f6:	79fb      	ldrb	r3, [r7, #7]
 80008f8:	2b1f      	cmp	r3, #31
 80008fa:	d90f      	bls.n	800091c <GPIO_IRQInterruptConfig+0xc0>
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	2b3f      	cmp	r3, #63	; 0x3f
 8000900:	d80c      	bhi.n	800091c <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1<<(IRQNumber%32));
 8000902:	4b17      	ldr	r3, [pc, #92]	; (8000960 <GPIO_IRQInterruptConfig+0x104>)
 8000904:	681b      	ldr	r3, [r3, #0]
 8000906:	79fa      	ldrb	r2, [r7, #7]
 8000908:	f002 021f 	and.w	r2, r2, #31
 800090c:	2101      	movs	r1, #1
 800090e:	fa01 f202 	lsl.w	r2, r1, r2
 8000912:	4611      	mov	r1, r2
 8000914:	4a12      	ldr	r2, [pc, #72]	; (8000960 <GPIO_IRQInterruptConfig+0x104>)
 8000916:	430b      	orrs	r3, r1
 8000918:	6013      	str	r3, [r2, #0]
 800091a:	e012      	b.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber>= 64 && IRQNumber < 96)
 800091c:	79fb      	ldrb	r3, [r7, #7]
 800091e:	2b3f      	cmp	r3, #63	; 0x3f
 8000920:	d90f      	bls.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
 8000922:	79fb      	ldrb	r3, [r7, #7]
 8000924:	2b5f      	cmp	r3, #95	; 0x5f
 8000926:	d80c      	bhi.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1<<(IRQNumber%64));
 8000928:	4b0e      	ldr	r3, [pc, #56]	; (8000964 <GPIO_IRQInterruptConfig+0x108>)
 800092a:	681b      	ldr	r3, [r3, #0]
 800092c:	79fa      	ldrb	r2, [r7, #7]
 800092e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000932:	2101      	movs	r1, #1
 8000934:	fa01 f202 	lsl.w	r2, r1, r2
 8000938:	4611      	mov	r1, r2
 800093a:	4a0a      	ldr	r2, [pc, #40]	; (8000964 <GPIO_IRQInterruptConfig+0x108>)
 800093c:	430b      	orrs	r3, r1
 800093e:	6013      	str	r3, [r2, #0]
}
 8000940:	e7ff      	b.n	8000942 <GPIO_IRQInterruptConfig+0xe6>
 8000942:	bf00      	nop
 8000944:	370c      	adds	r7, #12
 8000946:	46bd      	mov	sp, r7
 8000948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800094c:	4770      	bx	lr
 800094e:	bf00      	nop
 8000950:	e000e100 	.word	0xe000e100
 8000954:	e000e104 	.word	0xe000e104
 8000958:	e000e108 	.word	0xe000e108
 800095c:	e000e180 	.word	0xe000e180
 8000960:	e000e184 	.word	0xe000e184
 8000964:	e000e188 	.word	0xe000e188

08000968 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 8000968:	b480      	push	{r7}
 800096a:	b085      	sub	sp, #20
 800096c:	af00      	add	r7, sp, #0
 800096e:	4603      	mov	r3, r0
 8000970:	6039      	str	r1, [r7, #0]
 8000972:	71fb      	strb	r3, [r7, #7]

		//First find the IPR regisetr
		uint8_t iprx = IRQNumber/4;
 8000974:	79fb      	ldrb	r3, [r7, #7]
 8000976:	089b      	lsrs	r3, r3, #2
 8000978:	73fb      	strb	r3, [r7, #15]
		uint8_t iprx_section = IRQNumber % 4;
 800097a:	79fb      	ldrb	r3, [r7, #7]
 800097c:	f003 0303 	and.w	r3, r3, #3
 8000980:	73bb      	strb	r3, [r7, #14]
		uint16_t shift_amount = (8*iprx_section) + (8 - NO_PRIORITY_BITS_IMPLEMENTED);
 8000982:	7bbb      	ldrb	r3, [r7, #14]
 8000984:	b29b      	uxth	r3, r3
 8000986:	00db      	lsls	r3, r3, #3
 8000988:	b29b      	uxth	r3, r3
 800098a:	3304      	adds	r3, #4
 800098c:	81bb      	strh	r3, [r7, #12]

		*(NVIC_PR_BASE_ADDR + iprx) |= IRQPriority << shift_amount ;
 800098e:	7bfb      	ldrb	r3, [r7, #15]
 8000990:	009b      	lsls	r3, r3, #2
 8000992:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000996:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800099a:	6819      	ldr	r1, [r3, #0]
 800099c:	89bb      	ldrh	r3, [r7, #12]
 800099e:	683a      	ldr	r2, [r7, #0]
 80009a0:	409a      	lsls	r2, r3
 80009a2:	7bfb      	ldrb	r3, [r7, #15]
 80009a4:	009b      	lsls	r3, r3, #2
 80009a6:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009aa:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009ae:	430a      	orrs	r2, r1
 80009b0:	601a      	str	r2, [r3, #0]

}
 80009b2:	bf00      	nop
 80009b4:	3714      	adds	r7, #20
 80009b6:	46bd      	mov	sp, r7
 80009b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009bc:	4770      	bx	lr
	...

080009c0 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 80009c0:	b480      	push	{r7}
 80009c2:	b083      	sub	sp, #12
 80009c4:	af00      	add	r7, sp, #0
 80009c6:	4603      	mov	r3, r0
 80009c8:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
		if(EXTI->PR & ( 1 << PinNumber))
 80009ca:	4b0c      	ldr	r3, [pc, #48]	; (80009fc <GPIO_IRQHandling+0x3c>)
 80009cc:	695b      	ldr	r3, [r3, #20]
 80009ce:	79fa      	ldrb	r2, [r7, #7]
 80009d0:	2101      	movs	r1, #1
 80009d2:	fa01 f202 	lsl.w	r2, r1, r2
 80009d6:	4013      	ands	r3, r2
 80009d8:	2b00      	cmp	r3, #0
 80009da:	d009      	beq.n	80009f0 <GPIO_IRQHandling+0x30>
		{
			//clear
			EXTI->PR |= ( 1 << PinNumber);
 80009dc:	4b07      	ldr	r3, [pc, #28]	; (80009fc <GPIO_IRQHandling+0x3c>)
 80009de:	695b      	ldr	r3, [r3, #20]
 80009e0:	79fa      	ldrb	r2, [r7, #7]
 80009e2:	2101      	movs	r1, #1
 80009e4:	fa01 f202 	lsl.w	r2, r1, r2
 80009e8:	4611      	mov	r1, r2
 80009ea:	4a04      	ldr	r2, [pc, #16]	; (80009fc <GPIO_IRQHandling+0x3c>)
 80009ec:	430b      	orrs	r3, r1
 80009ee:	6153      	str	r3, [r2, #20]
		}


}
 80009f0:	bf00      	nop
 80009f2:	370c      	adds	r7, #12
 80009f4:	46bd      	mov	sp, r7
 80009f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009fa:	4770      	bx	lr
 80009fc:	40013c00 	.word	0x40013c00

08000a00 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000a00:	480d      	ldr	r0, [pc, #52]	; (8000a38 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000a02:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000a04:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000a08:	480c      	ldr	r0, [pc, #48]	; (8000a3c <LoopForever+0x6>)
  ldr r1, =_edata
 8000a0a:	490d      	ldr	r1, [pc, #52]	; (8000a40 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000a0c:	4a0d      	ldr	r2, [pc, #52]	; (8000a44 <LoopForever+0xe>)
  movs r3, #0
 8000a0e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a10:	e002      	b.n	8000a18 <LoopCopyDataInit>

08000a12 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a12:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a14:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a16:	3304      	adds	r3, #4

08000a18 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a18:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a1a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a1c:	d3f9      	bcc.n	8000a12 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a1e:	4a0a      	ldr	r2, [pc, #40]	; (8000a48 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000a20:	4c0a      	ldr	r4, [pc, #40]	; (8000a4c <LoopForever+0x16>)
  movs r3, #0
 8000a22:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a24:	e001      	b.n	8000a2a <LoopFillZerobss>

08000a26 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a26:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000a28:	3204      	adds	r2, #4

08000a2a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000a2a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000a2c:	d3fb      	bcc.n	8000a26 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000a2e:	f000 f811 	bl	8000a54 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000a32:	f7ff fbef 	bl	8000214 <main>

08000a36 <LoopForever>:

LoopForever:
    b LoopForever
 8000a36:	e7fe      	b.n	8000a36 <LoopForever>
  ldr   r0, =_estack
 8000a38:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000a3c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a40:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000a44:	08000acc 	.word	0x08000acc
  ldr r2, =_sbss
 8000a48:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000a4c:	2000001c 	.word	0x2000001c

08000a50 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a50:	e7fe      	b.n	8000a50 <ADC_IRQHandler>
	...

08000a54 <__libc_init_array>:
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4d0d      	ldr	r5, [pc, #52]	; (8000a8c <__libc_init_array+0x38>)
 8000a58:	4c0d      	ldr	r4, [pc, #52]	; (8000a90 <__libc_init_array+0x3c>)
 8000a5a:	1b64      	subs	r4, r4, r5
 8000a5c:	10a4      	asrs	r4, r4, #2
 8000a5e:	2600      	movs	r6, #0
 8000a60:	42a6      	cmp	r6, r4
 8000a62:	d109      	bne.n	8000a78 <__libc_init_array+0x24>
 8000a64:	4d0b      	ldr	r5, [pc, #44]	; (8000a94 <__libc_init_array+0x40>)
 8000a66:	4c0c      	ldr	r4, [pc, #48]	; (8000a98 <__libc_init_array+0x44>)
 8000a68:	f000 f820 	bl	8000aac <_init>
 8000a6c:	1b64      	subs	r4, r4, r5
 8000a6e:	10a4      	asrs	r4, r4, #2
 8000a70:	2600      	movs	r6, #0
 8000a72:	42a6      	cmp	r6, r4
 8000a74:	d105      	bne.n	8000a82 <__libc_init_array+0x2e>
 8000a76:	bd70      	pop	{r4, r5, r6, pc}
 8000a78:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a7c:	4798      	blx	r3
 8000a7e:	3601      	adds	r6, #1
 8000a80:	e7ee      	b.n	8000a60 <__libc_init_array+0xc>
 8000a82:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a86:	4798      	blx	r3
 8000a88:	3601      	adds	r6, #1
 8000a8a:	e7f2      	b.n	8000a72 <__libc_init_array+0x1e>
 8000a8c:	08000ac4 	.word	0x08000ac4
 8000a90:	08000ac4 	.word	0x08000ac4
 8000a94:	08000ac4 	.word	0x08000ac4
 8000a98:	08000ac8 	.word	0x08000ac8

08000a9c <memset>:
 8000a9c:	4402      	add	r2, r0
 8000a9e:	4603      	mov	r3, r0
 8000aa0:	4293      	cmp	r3, r2
 8000aa2:	d100      	bne.n	8000aa6 <memset+0xa>
 8000aa4:	4770      	bx	lr
 8000aa6:	f803 1b01 	strb.w	r1, [r3], #1
 8000aaa:	e7f9      	b.n	8000aa0 <memset+0x4>

08000aac <_init>:
 8000aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aae:	bf00      	nop
 8000ab0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ab2:	bc08      	pop	{r3}
 8000ab4:	469e      	mov	lr, r3
 8000ab6:	4770      	bx	lr

08000ab8 <_fini>:
 8000ab8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aba:	bf00      	nop
 8000abc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000abe:	bc08      	pop	{r3}
 8000ac0:	469e      	mov	lr, r3
 8000ac2:	4770      	bx	lr
