
06_ButtonBlinky.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000554  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006fc  08000704  00010704  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006fc  080006fc  00010704  2**0
                  CONTENTS
  4 .ARM          00000000  080006fc  080006fc  00010704  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006fc  08000704  00010704  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006fc  080006fc  000106fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000700  08000700  00010700  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010704  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000704  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000704  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010704  2**0
                  CONTENTS, READONLY
 12 .debug_info   000019c7  00000000  00000000  00010734  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003b6  00000000  00000000  000120fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  000124b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00012570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000221a  00000000  00000000  00012600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000f4a  00000000  00000000  0001481a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009461  00000000  00000000  00015764  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001ebc5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000220  00000000  00000000  0001ec18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080006e4 	.word	0x080006e4

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080006e4 	.word	0x080006e4

080001e8 <main>:
#include <stdint.h>
#include <stm32f407xx.h>
#include <gpio.h>

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b086      	sub	sp, #24
 80001ec:	af00      	add	r7, sp, #0
  GPIO_Handle_t GPIOLed, GPIOButton;

  GPIOLed.pGPIOx = GPIOD;
 80001ee:	4b1e      	ldr	r3, [pc, #120]	; (8000268 <main+0x80>)
 80001f0:	60fb      	str	r3, [r7, #12]
  GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINUMBER_12;
 80001f2:	230c      	movs	r3, #12
 80001f4:	743b      	strb	r3, [r7, #16]
  GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	747b      	strb	r3, [r7, #17]
  GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 80001fa:	2301      	movs	r3, #1
 80001fc:	74bb      	strb	r3, [r7, #18]
  GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PUSHPULL;
 80001fe:	2300      	movs	r3, #0
 8000200:	753b      	strb	r3, [r7, #20]
  GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPD_NO;
 8000202:	2300      	movs	r3, #0
 8000204:	74fb      	strb	r3, [r7, #19]

  GPIOButton.pGPIOx = GPIOA;
 8000206:	4b19      	ldr	r3, [pc, #100]	; (800026c <main+0x84>)
 8000208:	603b      	str	r3, [r7, #0]
  GPIOButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINUMBER_0;
 800020a:	2300      	movs	r3, #0
 800020c:	713b      	strb	r3, [r7, #4]
  GPIOButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_INPUT;
 800020e:	2300      	movs	r3, #0
 8000210:	717b      	strb	r3, [r7, #5]
  GPIOButton.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PUSHPULL;
 8000212:	2300      	movs	r3, #0
 8000214:	723b      	strb	r3, [r7, #8]
  GPIOButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPD_NO;
 8000216:	2300      	movs	r3, #0
 8000218:	71fb      	strb	r3, [r7, #7]
  GPIOButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 800021a:	2301      	movs	r3, #1
 800021c:	71bb      	strb	r3, [r7, #6]

  GPIO_PeriClockControl(GPIOD, ENABLE);
 800021e:	2101      	movs	r1, #1
 8000220:	4811      	ldr	r0, [pc, #68]	; (8000268 <main+0x80>)
 8000222:	f000 f825 	bl	8000270 <GPIO_PeriClockControl>
  GPIO_PeriClockControl(GPIOA, ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	4810      	ldr	r0, [pc, #64]	; (800026c <main+0x84>)
 800022a:	f000 f821 	bl	8000270 <GPIO_PeriClockControl>
  GPIO_Init(&GPIOButton);
 800022e:	463b      	mov	r3, r7
 8000230:	4618      	mov	r0, r3
 8000232:	f000 f905 	bl	8000440 <GPIO_Init>
  GPIO_Init(&GPIOLed);
 8000236:	f107 030c 	add.w	r3, r7, #12
 800023a:	4618      	mov	r0, r3
 800023c:	f000 f900 	bl	8000440 <GPIO_Init>

  while(1)
  {
	  if(GPIO_ReadFromInputPin(GPIOA, GPIO_PINUMBER_0) == BUTTON_PRESSED)
 8000240:	2100      	movs	r1, #0
 8000242:	480a      	ldr	r0, [pc, #40]	; (800026c <main+0x84>)
 8000244:	f000 f9c4 	bl	80005d0 <GPIO_ReadFromInputPin>
 8000248:	4603      	mov	r3, r0
 800024a:	2b01      	cmp	r3, #1
 800024c:	d105      	bne.n	800025a <main+0x72>
	  {
		  GPIO_WriteToOutputPin(GPIOD, GPIO_PINUMBER_12, SET);
 800024e:	2201      	movs	r2, #1
 8000250:	210c      	movs	r1, #12
 8000252:	4805      	ldr	r0, [pc, #20]	; (8000268 <main+0x80>)
 8000254:	f000 f9d2 	bl	80005fc <GPIO_WriteToOutputPin>
 8000258:	e7f2      	b.n	8000240 <main+0x58>
	  }
	  else
	  {
		  GPIO_WriteToOutputPin(GPIOD, GPIO_PINUMBER_12, RESET);
 800025a:	2200      	movs	r2, #0
 800025c:	210c      	movs	r1, #12
 800025e:	4802      	ldr	r0, [pc, #8]	; (8000268 <main+0x80>)
 8000260:	f000 f9cc 	bl	80005fc <GPIO_WriteToOutputPin>
	  if(GPIO_ReadFromInputPin(GPIOA, GPIO_PINUMBER_0) == BUTTON_PRESSED)
 8000264:	e7ec      	b.n	8000240 <main+0x58>
 8000266:	bf00      	nop
 8000268:	40020c00 	.word	0x40020c00
 800026c:	40020000 	.word	0x40020000

08000270 <GPIO_PeriClockControl>:
 *      Author: Navjeevan
 */
#include <gpio.h>

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
 8000278:	460b      	mov	r3, r1
 800027a:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 800027c:	78fb      	ldrb	r3, [r7, #3]
 800027e:	2b01      	cmp	r3, #1
 8000280:	d162      	bne.n	8000348 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a64      	ldr	r2, [pc, #400]	; (8000418 <GPIO_PeriClockControl+0x1a8>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d106      	bne.n	8000298 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800028a:	4b64      	ldr	r3, [pc, #400]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 800028c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028e:	4a63      	ldr	r2, [pc, #396]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000290:	f043 0301 	orr.w	r3, r3, #1
 8000294:	6313      	str	r3, [r2, #48]	; 0x30
			{
				GPIOI_PCLK_DI();
			}
	}

}
 8000296:	e0b9      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a61      	ldr	r2, [pc, #388]	; (8000420 <GPIO_PeriClockControl+0x1b0>)
 800029c:	4293      	cmp	r3, r2
 800029e:	d106      	bne.n	80002ae <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002a0:	4b5e      	ldr	r3, [pc, #376]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a4:	4a5d      	ldr	r2, [pc, #372]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002a6:	f043 0302 	orr.w	r3, r3, #2
 80002aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ac:	e0ae      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	4a5c      	ldr	r2, [pc, #368]	; (8000424 <GPIO_PeriClockControl+0x1b4>)
 80002b2:	4293      	cmp	r3, r2
 80002b4:	d106      	bne.n	80002c4 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002b6:	4b59      	ldr	r3, [pc, #356]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ba:	4a58      	ldr	r2, [pc, #352]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002bc:	f043 0304 	orr.w	r3, r3, #4
 80002c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c2:	e0a3      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	4a58      	ldr	r2, [pc, #352]	; (8000428 <GPIO_PeriClockControl+0x1b8>)
 80002c8:	4293      	cmp	r3, r2
 80002ca:	d106      	bne.n	80002da <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002cc:	4b53      	ldr	r3, [pc, #332]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d0:	4a52      	ldr	r2, [pc, #328]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002d2:	f043 0308 	orr.w	r3, r3, #8
 80002d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d8:	e098      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	4a53      	ldr	r2, [pc, #332]	; (800042c <GPIO_PeriClockControl+0x1bc>)
 80002de:	4293      	cmp	r3, r2
 80002e0:	d106      	bne.n	80002f0 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80002e2:	4b4e      	ldr	r3, [pc, #312]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e6:	4a4d      	ldr	r2, [pc, #308]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002e8:	f043 0310 	orr.w	r3, r3, #16
 80002ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ee:	e08d      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	4a4f      	ldr	r2, [pc, #316]	; (8000430 <GPIO_PeriClockControl+0x1c0>)
 80002f4:	4293      	cmp	r3, r2
 80002f6:	d106      	bne.n	8000306 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80002f8:	4b48      	ldr	r3, [pc, #288]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fc:	4a47      	ldr	r2, [pc, #284]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80002fe:	f043 0320 	orr.w	r3, r3, #32
 8000302:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000304:	e082      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a4a      	ldr	r2, [pc, #296]	; (8000434 <GPIO_PeriClockControl+0x1c4>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d106      	bne.n	800031c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800030e:	4b43      	ldr	r3, [pc, #268]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000312:	4a42      	ldr	r2, [pc, #264]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000314:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000318:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031a:	e077      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a46      	ldr	r2, [pc, #280]	; (8000438 <GPIO_PeriClockControl+0x1c8>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000324:	4b3d      	ldr	r3, [pc, #244]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000328:	4a3c      	ldr	r2, [pc, #240]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 800032a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800032e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000330:	e06c      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a41      	ldr	r2, [pc, #260]	; (800043c <GPIO_PeriClockControl+0x1cc>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d168      	bne.n	800040c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800033a:	4b38      	ldr	r3, [pc, #224]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033e:	4a37      	ldr	r2, [pc, #220]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000340:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000344:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000346:	e061      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a33      	ldr	r2, [pc, #204]	; (8000418 <GPIO_PeriClockControl+0x1a8>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <GPIO_PeriClockControl+0xee>
				GPIOA_PCLK_DI();
 8000350:	4b32      	ldr	r3, [pc, #200]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000352:	691b      	ldr	r3, [r3, #16]
 8000354:	4a31      	ldr	r2, [pc, #196]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000356:	f023 0301 	bic.w	r3, r3, #1
 800035a:	6113      	str	r3, [r2, #16]
}
 800035c:	e056      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a2f      	ldr	r2, [pc, #188]	; (8000420 <GPIO_PeriClockControl+0x1b0>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <GPIO_PeriClockControl+0x104>
				GPIOB_PCLK_DI();
 8000366:	4b2d      	ldr	r3, [pc, #180]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000368:	691b      	ldr	r3, [r3, #16]
 800036a:	4a2c      	ldr	r2, [pc, #176]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 800036c:	f023 0302 	bic.w	r3, r3, #2
 8000370:	6113      	str	r3, [r2, #16]
}
 8000372:	e04b      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a2b      	ldr	r2, [pc, #172]	; (8000424 <GPIO_PeriClockControl+0x1b4>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <GPIO_PeriClockControl+0x11a>
				GPIOC_PCLK_DI();
 800037c:	4b27      	ldr	r3, [pc, #156]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 800037e:	691b      	ldr	r3, [r3, #16]
 8000380:	4a26      	ldr	r2, [pc, #152]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000382:	f023 0304 	bic.w	r3, r3, #4
 8000386:	6113      	str	r3, [r2, #16]
}
 8000388:	e040      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a26      	ldr	r2, [pc, #152]	; (8000428 <GPIO_PeriClockControl+0x1b8>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d106      	bne.n	80003a0 <GPIO_PeriClockControl+0x130>
				GPIOD_PCLK_DI();
 8000392:	4b22      	ldr	r3, [pc, #136]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000394:	691b      	ldr	r3, [r3, #16]
 8000396:	4a21      	ldr	r2, [pc, #132]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000398:	f023 0308 	bic.w	r3, r3, #8
 800039c:	6113      	str	r3, [r2, #16]
}
 800039e:	e035      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a22      	ldr	r2, [pc, #136]	; (800042c <GPIO_PeriClockControl+0x1bc>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <GPIO_PeriClockControl+0x146>
				GPIOE_PCLK_DI();
 80003a8:	4b1c      	ldr	r3, [pc, #112]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003aa:	691b      	ldr	r3, [r3, #16]
 80003ac:	4a1b      	ldr	r2, [pc, #108]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003ae:	f023 0310 	bic.w	r3, r3, #16
 80003b2:	6113      	str	r3, [r2, #16]
}
 80003b4:	e02a      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a1d      	ldr	r2, [pc, #116]	; (8000430 <GPIO_PeriClockControl+0x1c0>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <GPIO_PeriClockControl+0x15c>
				GPIOF_PCLK_DI();
 80003be:	4b17      	ldr	r3, [pc, #92]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003c0:	691b      	ldr	r3, [r3, #16]
 80003c2:	4a16      	ldr	r2, [pc, #88]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003c4:	f023 0320 	bic.w	r3, r3, #32
 80003c8:	6113      	str	r3, [r2, #16]
}
 80003ca:	e01f      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a19      	ldr	r2, [pc, #100]	; (8000434 <GPIO_PeriClockControl+0x1c4>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_PeriClockControl+0x172>
				GPIOG_PCLK_DI();
 80003d4:	4b11      	ldr	r3, [pc, #68]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003d6:	691b      	ldr	r3, [r3, #16]
 80003d8:	4a10      	ldr	r2, [pc, #64]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003da:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003de:	6113      	str	r3, [r2, #16]
}
 80003e0:	e014      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a14      	ldr	r2, [pc, #80]	; (8000438 <GPIO_PeriClockControl+0x1c8>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_PeriClockControl+0x188>
				GPIOH_PCLK_DI();
 80003ea:	4b0c      	ldr	r3, [pc, #48]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003ec:	691b      	ldr	r3, [r3, #16]
 80003ee:	4a0b      	ldr	r2, [pc, #44]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 80003f0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003f4:	6113      	str	r3, [r2, #16]
}
 80003f6:	e009      	b.n	800040c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a10      	ldr	r2, [pc, #64]	; (800043c <GPIO_PeriClockControl+0x1cc>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d105      	bne.n	800040c <GPIO_PeriClockControl+0x19c>
				GPIOI_PCLK_DI();
 8000400:	4b06      	ldr	r3, [pc, #24]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000402:	691b      	ldr	r3, [r3, #16]
 8000404:	4a05      	ldr	r2, [pc, #20]	; (800041c <GPIO_PeriClockControl+0x1ac>)
 8000406:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800040a:	6113      	str	r3, [r2, #16]
}
 800040c:	bf00      	nop
 800040e:	370c      	adds	r7, #12
 8000410:	46bd      	mov	sp, r7
 8000412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000416:	4770      	bx	lr
 8000418:	40020000 	.word	0x40020000
 800041c:	40023800 	.word	0x40023800
 8000420:	40020400 	.word	0x40020400
 8000424:	40020800 	.word	0x40020800
 8000428:	40020c00 	.word	0x40020c00
 800042c:	40021000 	.word	0x40021000
 8000430:	40021400 	.word	0x40021400
 8000434:	40021800 	.word	0x40021800
 8000438:	40021c00 	.word	0x40021c00
 800043c:	40022000 	.word	0x40022000

08000440 <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000440:	b580      	push	{r7, lr}
 8000442:	b084      	sub	sp, #16
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 8000448:	2300      	movs	r3, #0
 800044a:	60fb      	str	r3, [r7, #12]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	2101      	movs	r1, #1
 8000452:	4618      	mov	r0, r3
 8000454:	f7ff ff0c 	bl	8000270 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	795b      	ldrb	r3, [r3, #5]
 800045c:	2b03      	cmp	r3, #3
 800045e:	d81f      	bhi.n	80004a0 <GPIO_Init+0x60>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	795b      	ldrb	r3, [r3, #5]
 8000464:	461a      	mov	r2, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	791b      	ldrb	r3, [r3, #4]
 800046a:	005b      	lsls	r3, r3, #1
 800046c:	fa02 f303 	lsl.w	r3, r2, r3
 8000470:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	681a      	ldr	r2, [r3, #0]
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	791b      	ldrb	r3, [r3, #4]
 800047c:	005b      	lsls	r3, r3, #1
 800047e:	2103      	movs	r1, #3
 8000480:	fa01 f303 	lsl.w	r3, r1, r3
 8000484:	43db      	mvns	r3, r3
 8000486:	4619      	mov	r1, r3
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	400a      	ands	r2, r1
 800048e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	6819      	ldr	r1, [r3, #0]
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	68fa      	ldr	r2, [r7, #12]
 800049c:	430a      	orrs	r2, r1
 800049e:	601a      	str	r2, [r3, #0]
	}else
	{
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	799b      	ldrb	r3, [r3, #6]
 80004a4:	461a      	mov	r2, r3
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	791b      	ldrb	r3, [r3, #4]
 80004aa:	005b      	lsls	r3, r3, #1
 80004ac:	fa02 f303 	lsl.w	r3, r2, r3
 80004b0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	689a      	ldr	r2, [r3, #8]
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	791b      	ldrb	r3, [r3, #4]
 80004bc:	005b      	lsls	r3, r3, #1
 80004be:	2103      	movs	r1, #3
 80004c0:	fa01 f303 	lsl.w	r3, r1, r3
 80004c4:	43db      	mvns	r3, r3
 80004c6:	4619      	mov	r1, r3
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	400a      	ands	r2, r1
 80004ce:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	6899      	ldr	r1, [r3, #8]
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	68fa      	ldr	r2, [r7, #12]
 80004dc:	430a      	orrs	r2, r1
 80004de:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	79db      	ldrb	r3, [r3, #7]
 80004e4:	461a      	mov	r2, r3
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	791b      	ldrb	r3, [r3, #4]
 80004ea:	005b      	lsls	r3, r3, #1
 80004ec:	fa02 f303 	lsl.w	r3, r2, r3
 80004f0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	68da      	ldr	r2, [r3, #12]
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	791b      	ldrb	r3, [r3, #4]
 80004fc:	005b      	lsls	r3, r3, #1
 80004fe:	2103      	movs	r1, #3
 8000500:	fa01 f303 	lsl.w	r3, r1, r3
 8000504:	43db      	mvns	r3, r3
 8000506:	4619      	mov	r1, r3
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	400a      	ands	r2, r1
 800050e:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	68d9      	ldr	r1, [r3, #12]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	68fa      	ldr	r2, [r7, #12]
 800051c:	430a      	orrs	r2, r1
 800051e:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	7a1b      	ldrb	r3, [r3, #8]
 8000524:	461a      	mov	r2, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	791b      	ldrb	r3, [r3, #4]
 800052a:	fa02 f303 	lsl.w	r3, r2, r3
 800052e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	685a      	ldr	r2, [r3, #4]
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	791b      	ldrb	r3, [r3, #4]
 800053a:	4619      	mov	r1, r3
 800053c:	2301      	movs	r3, #1
 800053e:	408b      	lsls	r3, r1
 8000540:	43db      	mvns	r3, r3
 8000542:	4619      	mov	r1, r3
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	400a      	ands	r2, r1
 800054a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	6859      	ldr	r1, [r3, #4]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	68fa      	ldr	r2, [r7, #12]
 8000558:	430a      	orrs	r2, r1
 800055a:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTERNATEFUNC)
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	795b      	ldrb	r3, [r3, #5]
 8000560:	2b02      	cmp	r3, #2
 8000562:	d131      	bne.n	80005c8 <GPIO_Init+0x188>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	791b      	ldrb	r3, [r3, #4]
 8000568:	08db      	lsrs	r3, r3, #3
 800056a:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	791b      	ldrb	r3, [r3, #4]
 8000570:	f003 0307 	and.w	r3, r3, #7
 8000574:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	7afa      	ldrb	r2, [r7, #11]
 800057c:	3208      	adds	r2, #8
 800057e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000582:	7abb      	ldrb	r3, [r7, #10]
 8000584:	009b      	lsls	r3, r3, #2
 8000586:	220f      	movs	r2, #15
 8000588:	fa02 f303 	lsl.w	r3, r2, r3
 800058c:	43db      	mvns	r3, r3
 800058e:	4618      	mov	r0, r3
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	7afa      	ldrb	r2, [r7, #11]
 8000596:	4001      	ands	r1, r0
 8000598:	3208      	adds	r2, #8
 800059a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	7afa      	ldrb	r2, [r7, #11]
 80005a4:	3208      	adds	r2, #8
 80005a6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	7a5b      	ldrb	r3, [r3, #9]
 80005ae:	461a      	mov	r2, r3
 80005b0:	7abb      	ldrb	r3, [r7, #10]
 80005b2:	009b      	lsls	r3, r3, #2
 80005b4:	fa02 f303 	lsl.w	r3, r2, r3
 80005b8:	4618      	mov	r0, r3
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	7afa      	ldrb	r2, [r7, #11]
 80005c0:	4301      	orrs	r1, r0
 80005c2:	3208      	adds	r2, #8
 80005c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80005c8:	bf00      	nop
 80005ca:	3710      	adds	r7, #16
 80005cc:	46bd      	mov	sp, r7
 80005ce:	bd80      	pop	{r7, pc}

080005d0 <GPIO_ReadFromInputPin>:

}


uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80005d0:	b480      	push	{r7}
 80005d2:	b085      	sub	sp, #20
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	6078      	str	r0, [r7, #4]
 80005d8:	460b      	mov	r3, r1
 80005da:	70fb      	strb	r3, [r7, #3]
   uint8_t value;

   value = (uint8_t )((pGPIOx->IDR  >> PinNumber) & 0x00000001 ) ;
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	691a      	ldr	r2, [r3, #16]
 80005e0:	78fb      	ldrb	r3, [r7, #3]
 80005e2:	fa22 f303 	lsr.w	r3, r2, r3
 80005e6:	b2db      	uxtb	r3, r3
 80005e8:	f003 0301 	and.w	r3, r3, #1
 80005ec:	73fb      	strb	r3, [r7, #15]

   return value;
 80005ee:	7bfb      	ldrb	r3, [r7, #15]
}
 80005f0:	4618      	mov	r0, r3
 80005f2:	3714      	adds	r7, #20
 80005f4:	46bd      	mov	sp, r7
 80005f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005fa:	4770      	bx	lr

080005fc <GPIO_WriteToOutputPin>:
	return value;
}


void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80005fc:	b480      	push	{r7}
 80005fe:	b083      	sub	sp, #12
 8000600:	af00      	add	r7, sp, #0
 8000602:	6078      	str	r0, [r7, #4]
 8000604:	460b      	mov	r3, r1
 8000606:	70fb      	strb	r3, [r7, #3]
 8000608:	4613      	mov	r3, r2
 800060a:	70bb      	strb	r3, [r7, #2]

	if(Value == ENABLE)
 800060c:	78bb      	ldrb	r3, [r7, #2]
 800060e:	2b01      	cmp	r3, #1
 8000610:	d109      	bne.n	8000626 <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR |= ( 1 << PinNumber);
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	695b      	ldr	r3, [r3, #20]
 8000616:	78fa      	ldrb	r2, [r7, #3]
 8000618:	2101      	movs	r1, #1
 800061a:	fa01 f202 	lsl.w	r2, r1, r2
 800061e:	431a      	orrs	r2, r3
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	615a      	str	r2, [r3, #20]
	}else
	{
		//write 0
		pGPIOx->ODR &= ~( 1 << PinNumber);
	}
}
 8000624:	e009      	b.n	800063a <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber);
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	695b      	ldr	r3, [r3, #20]
 800062a:	78fa      	ldrb	r2, [r7, #3]
 800062c:	2101      	movs	r1, #1
 800062e:	fa01 f202 	lsl.w	r2, r1, r2
 8000632:	43d2      	mvns	r2, r2
 8000634:	401a      	ands	r2, r3
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	615a      	str	r2, [r3, #20]
}
 800063a:	bf00      	nop
 800063c:	370c      	adds	r7, #12
 800063e:	46bd      	mov	sp, r7
 8000640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000644:	4770      	bx	lr
	...

08000648 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000648:	480d      	ldr	r0, [pc, #52]	; (8000680 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800064a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800064c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000650:	480c      	ldr	r0, [pc, #48]	; (8000684 <LoopForever+0x6>)
  ldr r1, =_edata
 8000652:	490d      	ldr	r1, [pc, #52]	; (8000688 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000654:	4a0d      	ldr	r2, [pc, #52]	; (800068c <LoopForever+0xe>)
  movs r3, #0
 8000656:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000658:	e002      	b.n	8000660 <LoopCopyDataInit>

0800065a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800065a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800065c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800065e:	3304      	adds	r3, #4

08000660 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000660:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000662:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000664:	d3f9      	bcc.n	800065a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000666:	4a0a      	ldr	r2, [pc, #40]	; (8000690 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000668:	4c0a      	ldr	r4, [pc, #40]	; (8000694 <LoopForever+0x16>)
  movs r3, #0
 800066a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800066c:	e001      	b.n	8000672 <LoopFillZerobss>

0800066e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800066e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000670:	3204      	adds	r2, #4

08000672 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000672:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000674:	d3fb      	bcc.n	800066e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000676:	f000 f811 	bl	800069c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800067a:	f7ff fdb5 	bl	80001e8 <main>

0800067e <LoopForever>:

LoopForever:
    b LoopForever
 800067e:	e7fe      	b.n	800067e <LoopForever>
  ldr   r0, =_estack
 8000680:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000684:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000688:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800068c:	08000704 	.word	0x08000704
  ldr r2, =_sbss
 8000690:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000694:	2000001c 	.word	0x2000001c

08000698 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000698:	e7fe      	b.n	8000698 <ADC_IRQHandler>
	...

0800069c <__libc_init_array>:
 800069c:	b570      	push	{r4, r5, r6, lr}
 800069e:	4d0d      	ldr	r5, [pc, #52]	; (80006d4 <__libc_init_array+0x38>)
 80006a0:	4c0d      	ldr	r4, [pc, #52]	; (80006d8 <__libc_init_array+0x3c>)
 80006a2:	1b64      	subs	r4, r4, r5
 80006a4:	10a4      	asrs	r4, r4, #2
 80006a6:	2600      	movs	r6, #0
 80006a8:	42a6      	cmp	r6, r4
 80006aa:	d109      	bne.n	80006c0 <__libc_init_array+0x24>
 80006ac:	4d0b      	ldr	r5, [pc, #44]	; (80006dc <__libc_init_array+0x40>)
 80006ae:	4c0c      	ldr	r4, [pc, #48]	; (80006e0 <__libc_init_array+0x44>)
 80006b0:	f000 f818 	bl	80006e4 <_init>
 80006b4:	1b64      	subs	r4, r4, r5
 80006b6:	10a4      	asrs	r4, r4, #2
 80006b8:	2600      	movs	r6, #0
 80006ba:	42a6      	cmp	r6, r4
 80006bc:	d105      	bne.n	80006ca <__libc_init_array+0x2e>
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80006c4:	4798      	blx	r3
 80006c6:	3601      	adds	r6, #1
 80006c8:	e7ee      	b.n	80006a8 <__libc_init_array+0xc>
 80006ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ce:	4798      	blx	r3
 80006d0:	3601      	adds	r6, #1
 80006d2:	e7f2      	b.n	80006ba <__libc_init_array+0x1e>
 80006d4:	080006fc 	.word	0x080006fc
 80006d8:	080006fc 	.word	0x080006fc
 80006dc:	080006fc 	.word	0x080006fc
 80006e0:	08000700 	.word	0x08000700

080006e4 <_init>:
 80006e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006e6:	bf00      	nop
 80006e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ea:	bc08      	pop	{r3}
 80006ec:	469e      	mov	lr, r3
 80006ee:	4770      	bx	lr

080006f0 <_fini>:
 80006f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006f2:	bf00      	nop
 80006f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006f6:	bc08      	pop	{r3}
 80006f8:	469e      	mov	lr, r3
 80006fa:	4770      	bx	lr
