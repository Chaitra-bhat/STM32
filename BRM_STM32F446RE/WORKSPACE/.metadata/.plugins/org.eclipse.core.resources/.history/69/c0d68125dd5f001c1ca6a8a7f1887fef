/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */


/*
 * PROBLEM STATEMENT : Toggle the onBoard LED on STM32F446RE present at PA5
 */


#include <stdint.h>
#include <stm32f446re.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

//BASIC DEFINITIONS
#define PERIPHERAL_BASEADDR				0x40000000U
#define APB1_BASEADDR					0x40000000U
#define APB2_BASEADDR					0x40010000U
#define AHB1_BASEADDR					0x40020000U
#define AHB2_BASEADDR					0x50000000U
#define AHB3_BASEADDR					0xA0001000U

#define GPIOA_BASEADDR					0x40020000U

#define RCC_BASEADDR					0x40023800U
#define RCC_AHB1ENR						(RCC_BASEADDR + 0x30)

#define MODER_OFFSET					0x00

#define GPIOA_ENABLE					(1U<<0)
#define GPIOA_MODER						(*(volatile unsigned int *) (GPIOA_BASEADDR + MODER_OFFSET))	// compiler will not optmize code when we use volatile

#define ODR_OFFSET						0x04U
#define GPIOA_ODR						(*(volatile unsigned int *) (GPIOA_BASEADDR + ODR_OFFSET))


#define GPIO_PIN5						(1<<5)
#define LED_ONBOARD_PIN					GPIO_PIN5

int main(void)
{
	//Enable clock for GPIO A
	RCC_AHB1ENR |= (1U<<0);

	//Set PA5 as output pin
	GPIOA_MODER |= (1<<10);
	GPIOA_MODER &= ~(1U<<11);


	while(1)
	{
		GPIOA_ODR |= LED_ONBOARD_PIN;
	}

	return 0;
}
